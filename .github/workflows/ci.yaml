name: CI workflow

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - "develop"
      - "master"
      - "pkg/*"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1
      - if: matrix.os == 'windows-latest'
        name: Windows Dependencies
        shell: pwsh
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          scoop install mingw git
      - name: UnitTest
        run: |
          make test
          git diff

  integration-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12 ]
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1
      - name: Integration_Test
        run: make integration

  linters:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12 ]
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1
      - name: Linters
        run: |
          cargo fmt --version || rustup component add rustfmt
          cargo clippy --version || rustup component add clippy
          make fmt
          make clippy
          git diff --exit-code Cargo.lock

  security-audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - --hide-inclusion-graph --show-stats advisories sources -Wunmaintained
          - --hide-inclusion-graph --show-stats bans
          - --hide-inclusion-graph --show-stats licenses
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}

  ci-success:
    name: ci
    needs:
      - unit-test
      - integration-test
      - linters
      - security-audit
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        run: exit 0
